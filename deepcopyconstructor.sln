#include<iostream>
class demo
{
public:
	int a, b, * p;
	demo()
	{

	}
	demo(int a, int b, int c)
	{
		this->a = a;
		this->b = b;
		this->p = (int*)malloc(sizeof(int));
		*(this->p) = c;
	}
	demo(const demo& obj)
	{
		this->a = obj.a;
		this->b = obj.b;
		this->p = (int*)malloc(sizeof(int));
		*(this->p) = *(obj.p);
	}
	/*void operator=(const demo& obj)
	{
		this->a = obj.a;
		this->b = obj.b;
		this->p = (int*)malloc(sizeof(int));
		*(this->p) = *(obj.p);

	}*/

	demo& operator=(const demo& obj)
	{
		this->a = obj.a;
		this->b = obj.b;
		this->p = (int*)malloc(sizeof(int));
		*(this->p) = *(obj.p);
		return (*this);

	}
};
int main()
{
	demo d1(10, 20, 30);
	demo d2;//default contstructor
	d2 = d1;//copy by assing operator
	
	//demo d2 = d1;
	//demo d2(d1); 
	std::cout << "before change=\t" << d1.a << "\t" << d1.b << "\t" << *(d1.p)<<"\t"<<d2.a<<"\t"<<d2.b<<"\t"<<*(d2.p)<<std::endl;
	
	(d1.a)++;
	(d2.b)++;
	(*(d1.p))++;
	std::cout << "after change=\t" << d1.a << "\t" << d1.b << "\t" << *(d1.p) << "\t" << d2.a << "\t" << d2.b << "\t" << *(d2.p);
}
